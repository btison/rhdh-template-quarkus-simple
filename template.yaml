apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-web-template
  title: Quarkus Service
  description: Create a simple microservice using Quarkus with ArgoCD
  tags:
    - recommended
    - java
    - quarkus
    - maven
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: my-quarkus-app
          ui:field: EntityNamePicker
          maxLength: 23
        group_id:
          title: Group Id
          type: string
          default: com.redhat.rhdh
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: quarkus-app
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          default: com.redhat.rhdh
          type: string
          description: Name for the java package. eg (com.redhat.blah)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A cool quarkus app
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: {{ quay_host }}
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: {{ gitlab_host }}
              enum:
                - {{ gitlab_host }}
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: {{ gitlab_destination_group }}
              enum:
                - {{ gitlab_destination_group }}

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: {{ '${{ parameters.component_id }}' }}
          description: {{ '${{ parameters.description }}' }}
          namespace: {{ '${{ parameters.component_id }}' }}-dev
          group_id: {{ '${{ parameters.group_id }}' }}
          artifact_id: {{ '${{ parameters.artifact_id }}' }}
          java_package_name: {{ '${{ parameters.java_package_name }}' }}
          owner: {{ '${{ user.entity.metadata.name }}' }}
          cluster: {{ cluster_subdomain }}
          host: {{ '${{ parameters.repo.host }}' }}
          destination: {{ '${{ parameters.repo.owner }}' }}/{{ '${{ user.entity.metadata.name }}-${{ parameters.component_id }}' }}
          port: 8080
      targetPath: {{ './${{ user.entity.metadata.name }}-${{parameters.component_id}}' }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "{{ '${{ parameters.repo.host }}' }}?owner={{ '${{ parameters.repo.owner }}' }}&repo={{ '${{ user.entity.metadata.name }}-${{parameters.component_id}}' }}"
        repoVisibility: public
        sourcePath: {{ './${{ user.entity.metadata.name }}-${{parameters.component_id}}' }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: {{ '${{ steps.publish.output.repoContentsUrl }}' }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: {{ '${{ parameters.component_id }}' }}
          source_repository: https://{{ '${{ parameters.repo.host }}' }}/{{ '${{ parameters.repo.owner }}' }}/{{ '${{ user.entity.metadata.name }}-${{parameters.component_id}}' }}.git
          owner: {{ '${{ user.entity.metadata.name }}' }}
          namespace: {{ '${{ user.entity.metadata.name }}-${{ parameters.component_id }}' }}-dev
          image_registry: {{ '${{ parameters.image_registry }}' }}
          image_host: {{ '${{ parameters.image_host }}' }}
          image_organization: {{ '${{ parameters.image_organization }}' }}
          image_name: {{ '${{ user.entity.metadata.name }}-${{ parameters.component_id }}' }}
          image_tag: {{ '${{ parameters.image_tag }}' }}
          gitops_namespace: {{ rhdh_gitops_namespace }}
          gitops_project: {{ rhdh_gitops_project }}
          port: 8080
        targetPath: {{ './${{ user.entity.metadata.name }}-${{parameters.component_id}}-gitops' }}

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "{{ '${{ parameters.repo.host }}' }}?owner={{ '${{ parameters.repo.owner }}' }}&repo={{ '${{ user.entity.metadata.name }}-${{parameters.component_id}}' }}-gitops"
        title: gitops resources for {{ '${{ user.entity.metadata.name }}-${{ parameters.component_id }}' }}
        description: gitops resources for {{ '${{ user.entity.metadata.name }}-${{ parameters.component_id }}' }}
        sourcePath: {{ './${{ user.entity.metadata.name }}-${{parameters.component_id}}-gitops' }}
        repoVisibility: public

  output:
    links:
      - title: Source Code Repository
        url: {{ '${{ steps.publish.output.remoteUrl }}' }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: {{ '${{ steps.register.output.entityRef }}' }}
